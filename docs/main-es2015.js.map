{"version":3,"sources":["./src/environments/environment.ts","./src/app/screens/person-pin-dialog/person-pin-dialog.component.ts","./src/app/screens/person-pin-dialog/person-pin-dialog.component.html","./src/app/screens/day-total/day-total.component.ts","./src/app/screens/day-total/day-total.component.html","./src/app/services/ticket-services.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/screens/ticket-dialog/ticket-dialog.component.ts","./src/app/screens/ticket-dialog/ticket-dialog.component.html","./src/app/screens/ticket-entry/ticket-entry.component.ts","./src/app/screens/ticket-entry/ticket-entry.component.html","./src/app/screens/technician-actions/technician-actions.component.ts","./src/app/screens/technician-actions/technician-actions.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-person-pin-dialog',\n  templateUrl: './person-pin-dialog.component.html',\n  styleUrls: ['./person-pin-dialog.component.css']\n})\nexport class PersonPinDialogComponent implements OnInit {\n\n  pin: number;\n  constructor(\n    public dialogRef: MatDialogRef<PersonPinDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Please Enter Your Pin</h1>\n<div mat-dialog-content>\n    <!-- mat input for pin -->\n    <mat-form-field>\n        <input matInput type=\"password\" maxlength=\"4\" [(ngModel)]=\"pin\" name=\"pin\" required>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions align=\"center\">\n    <button mat-button (click)=\"onCancelClick()\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"pin\">Submit</button>\n</div>","import { Component, OnInit } from '@angular/core';\n//import TicketService from '../../services/ticket.service';\nimport { TicketServicesService } from 'src/app/services/ticket-services.service';\nimport { interval, Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { PersonPinDialogComponent } from '../person-pin-dialog/person-pin-dialog.component';\n\n//creating a data model to be displayed\ninterface Transaction {\n  price: number;\n  tip: number;\n}\n\n@Component({\n  selector: 'app-day-total',\n  templateUrl: './day-total.component.html',\n  styleUrls: ['./day-total.component.css']\n})\nexport class DayTotalComponent implements OnInit {\n\n  subscription: Subscription;\n  source : any;\n  displayedColumns: string[] = ['price', 'tip', 'transaction'];\n  pin: number;\n  invalidPin: boolean = false;\n  selected: any;\n  selectedPerson:any;\n  users = [];\n  searchDate : string;\n  tickets = [];\n  correctPin: boolean;\n  constructor(private service: TicketServicesService,\n    private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    //get users from local storage\n    this.users = JSON.parse(localStorage.getItem(\"users\"));\n    // get current date and store it into searchDate\n    // format searchDate using formatDate function\n    this.searchDate = this.formatDate(new Date());\n    this.correctPin = false;\n  }\n\n  //call getTickets function from service, sending searchDate and selectedPerson.emId as parameters\n\n  //change selected date\n  onDateChange(event: Date) {\n    let tempDate = \"\";\n    //convert date to string in format mm-dd-yyyy\n    tempDate = event.getMonth() + 1 + \"-\" + event.getDate() + \"-\" + event.getFullYear();\n    this.selected = tempDate;\n    //format searchDate using formatDate function and store it into searchDate\n    this.searchDate = this.formatDate(event);\n    this.getTickets();\n  }\n\n  //change selected person\n  //popup window to ask for pin\n  //clearing tickets\n  //set searchDate to current date, format it using formatDate function\n  //call getTickets function\n  personChange(event: any) {\n    // console.log(this.openDialog());\n    //get password of selectedPerson from list of users\n    let tempPerson = this.users.find(x => x.fname == event.value);\n    // let result = this.openDialog();\n    \n    // if(this.openDialog().localeCompare(tempPerson.code) == 0){\n      // console.log(\"correct pin\");\n      \n      // this.correctPin = true;\n      //changed selected to current date with format mm-dd-yyyy\n      this.selected = (new Date()).getMonth() + 1 + \"-\" + (new Date()).getDate() + \"-\" + (new Date()).getFullYear();\n      this.selectedPerson = event.value;\n      this.tickets = [];\n      this.searchDate = this.formatDate(new Date());\n      this.getTickets();\n    // }else{\n    //   console.log(\"incorrect pin\");\n    // }\n  }\n\n  openDialog(): string {\n    let result = '';\n    const dialogRef = this.dialog.open(PersonPinDialogComponent, {\n      width: '400px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      result = result;\n    });\n\n    return result;\n  }\n    \n  //pinChange function\n  //assign input to pin\n  //compare pin with password of selectedPerson from list of users\n  pinChange(event: any) {\n    // this.pin = event.value;\n\n    // //get password of selectedPerson from list of users\n    // let tempPerson = this.users.find(x => x.fname == event.value);\n    // console.log(tempPerson);\n    // //compare pin with password of selectedPerson from list of users\n    // if (tempPerson.password == this.pin) {\n    //   this.pin = null;\n    //   this.getTickets();\n    // }else{\n    //   this.invalidPin = true;\n    // }\n  }\n\n  //call function from service.getTickets, sending searchDate and selectedPerson.emId as parameters\n  async getTickets() {\n    //get emId of selectedPerson from list of users\n    let tempPerson = this.users.find(x => x.fname == this.selectedPerson);\n    this.tickets = [];\n    let temp  = await this.service.getTickets(this.searchDate, tempPerson.emId);\n    this.tickets = temp.data;\n    this.source = interval(60000);//setting to clear data every 60 seconds\n    this.subscription = this.source.subscribe(val => this.clearData());//clear data every 60 seconds, calling this here to insure there is enough time\n  }\n  \n  //format date to yyyy_mm_dd\n  formatDate(date: Date) {\n    let tempDate = \"\";\n    tempDate = date.getFullYear() + \"_\" + (date.getMonth() + 1) + \"_\" + date.getDate();\n    return tempDate;\n  }\n\n  //get total price of tickets\n  getTotalCost() {\n    if (!this.tickets) {\n      return 0;\n    }\n    let total = 0;\n    for (let i = 0; i < this.tickets.length; i++) {\n      total += this.tickets[i].price;\n    }\n    return total;\n  }\n\n  //get total tip of tickets\n  getTotalTip() {\n    if (!this.tickets) {\n      return 0;\n    }\n    let total = 0;\n    for (let i = 0; i < this.tickets.length; i++) {\n      total += this.tickets[i].tip;\n    }\n    return total;\n  }\n\n  clearData(){\n    this.tickets = [];\n    this.selectedPerson = \"\";\n    this.selected = \"\";\n    this.subscription.unsubscribe();\n    this.source = null;\n    this.correctPin = false;\n  }\n\n}\n\n","<div class=\"horizontal\">\n    <div class=\"divide\">\n        <mat-card class=\"demo-inline-calendar-card\">\n            <mat-card-title>Day Total</mat-card-title>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Name:</mat-label>\n                  <mat-select [(value)]=\"selectedPerson\" (selectionChange)=\"personChange($event)\">\n                    <mat-option *ngFor=\"let user of users\" [value]=\"user.fname\">{{user.fname}}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n            </div>\n            <!-- <mat-calendar *ngIf=\"correctPin\" (selectedChange)=\"onDateChange($event)\"></mat-calendar> -->\n            <mat-calendar (selectedChange)=\"onDateChange($event)\"></mat-calendar>\n\n        </mat-card>\n    </div>\n    <div class=\"divide\">\n        <h2 class=\"personText\">\n            <span *ngIf=\"selectedPerson\">{{selectedPerson}}:     {{selected}}</span>\n            <span *ngIf=\"!selectedPerson\">Please select a person and Date</span>\n        </h2>\n\n        <table mat-table [dataSource]=\"tickets\" class=\"mat-elevation-z8\">\n            <!-- Item Column -->\n            <ng-container matColumnDef=\"price\">\n              <th mat-header-cell *matHeaderCellDef> Price </th>\n              <td mat-cell *matCellDef=\"let ticket\"> {{ticket.price}} </td>\n              <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n            </ng-container>\n          \n            <!-- Cost Column -->\n            <ng-container matColumnDef=\"tip\">\n              <th mat-header-cell *matHeaderCellDef> Tip </th>\n              <td mat-cell *matCellDef=\"let ticket\"> {{ticket.tip}} </td>\n              <td mat-footer-cell *matFooterCellDef> {{getTotalTip() | currency}} </td>\n            </ng-container>\n          \n            <!-- Cost Column -->\n            <ng-container matColumnDef=\"transaction\">\n                <th mat-header-cell *matHeaderCellDef> Transaction </th>\n                <td mat-cell *matCellDef=\"let ticket\"> {{ticket.transaction? ticket.transaction: 'Cash' }} </td>\n                <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n          </table>\n          \n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketServicesService {\n  constructor( private http: HttpClient ) { }\n\n  //Getting technician details\n  getTechniciansAndStoreToLocalStorage(){\n    let users: any;\n    this.http.post<any>('https://us-central1-ntl-fb.cloudfunctions.net/getTechnicians',{}).subscribe(data => {  \n        // console.log(data.data);\n        localStorage.setItem('users', JSON.stringify(data.data));\n        users = data.data;\n    });\n  }\n\n  //Sending and persisting to the DB\n  async sendTicket(data):Promise<boolean>{\n    var success = false;\n    let payload = (this.createTicketPayload(data));\n    await this.http.post<any>('https://us-central1-ntl-fb.cloudfunctions.net/createTicket', payload, {}).subscribe(data => {  \n      if(data)  return true;\n    });\n    return false;\n  }\n\n  //get tickets for the technician using async await\n  async getTickets(date, emId):Promise<any>{\n    let tickets: any;\n    let payload = {\n      emId: emId,\n      date: date\n    }\n    await this.http.post<any>('https://us-central1-ntl-fb.cloudfunctions.net/getTickets', payload, {}).toPromise().then(data => {  \n      tickets = data;\n    });\n    return tickets;\n  }\n\n  createTicketPayload(data){\n    let users = JSON.parse(localStorage.getItem('users'));\n    let person = \"\"\n    users.forEach(element => {\n      if(String(element.fname).localeCompare(data.person)==0){\n        person = element.emId;\n      }\n    });\n    let payload = {\n      emId: person,\n      price: data.price,\n      tip: data.tip,\n      transaction: data.transNum,\n      addition: \"\"\n    }\n    return payload;\n  }\n\n  \n}\n","import { Component } from '@angular/core';\nimport { TicketEntryComponent } from '../app/screens/ticket-entry/ticket-entry.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lifestyle-frontend';\n}\n","<!-- <app-ticket-entry></app-ticket-entry> -->\n<!-- <app-day-total></app-day-total> -->\n<app-technician-actions></app-technician-actions>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\n\nimport { TicketEntryComponent } from './screens/ticket-entry/ticket-entry.component';\nimport { TicketDialogComponent } from './screens/ticket-dialog/ticket-dialog.component';\nimport { DayTotalComponent } from './screens/day-total/day-total.component';\nimport { TechnicianActionsComponent } from './screens/technician-actions/technician-actions.component';\nimport { PersonPinDialogComponent } from './screens/person-pin-dialog/person-pin-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TicketEntryComponent,\n    TicketDialogComponent,\n    DayTotalComponent,\n    TechnicianActionsComponent,\n    PersonPinDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatRadioModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatIconModule,\n    MatTabsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface TicketDialogData {\n  person: any;\n  workingWith: any;\n  price: any;\n  tip: any;\n  cash: any;\n  transNum: any;\n}\n\n@Component({\n  selector: 'app-ticket-dialog',\n  templateUrl: './ticket-dialog.component.html',\n  styleUrls: ['./ticket-dialog.component.css']\n})\n\nexport class TicketDialogComponent{\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TicketDialogData,\n    public dialogRef: MatDialogRef<TicketDialogComponent>\n  ) {\n    this.data.person = this.data.person.value;\n    if(this.data.workingWith) this.data.workingWith = this.data.workingWith.value;\n    if(this.data.price) this.data.price = this.data.price.value;\n    if(this.data.tip) this.data.tip = this.data.tip.value;\n    if(this.data.cash)  this.data.cash = this.data.cash.value;\n    if(this.data.transNum)  this.data.transNum = this.data.transNum.value;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Please double-check</h1>\n<div mat-dialog-content>\n    <h2>\n        <p>Technician: </p>\n        <p>{{data.person}}</p>\n    </h2>\n    <h2 *ngIf=\"data.workingWith\">\n        <p>Working with: </p>\n        <p>{{data.workingWith}}</p>    \n    </h2>\n    <h2>\n        <p>Price: </p>\n        <p>{{data.price}}</p>\n    </h2>\n    <h2>\n        <p>Tip: </p>\n        <p>{{data.tip}}</p>\n    </h2>\n    <h2 *ngIf=\"!data.cash\">\n        <p>Transaction Number: </p>\n        <p>{{data.transNum}}</p>\n    </h2>\n</div>\n<div mat-dialog-actions align=\"center\">\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"data\">Submit</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TicketServicesService } from 'src/app/services/ticket-services.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TicketDialogComponent } from '../ticket-dialog/ticket-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-ticket-entry',\n  templateUrl: './ticket-entry.component.html',\n  styleUrls: ['./ticket-entry.component.css']\n})\nexport class TicketEntryComponent implements OnInit {\n  loading = false;\n  users: [];\n  cashChecked: boolean;\n  ticketForm = new FormGroup({\n    person: new FormControl('', [Validators.required]),\n    workingWith: new FormControl(''),\n    price: new FormControl('', [Validators.required]),\n    tip: new FormControl('', [Validators.required]),\n    cash: new FormControl(''),\n    transNum: new FormControl('')\n  })\n\n  constructor(\n    private service: TicketServicesService,\n    public dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n    this.cashChecked = false;\n    // getting and storing users info into local storage\n    this.service.getTechniciansAndStoreToLocalStorage();\n    //retrieving from local storage\n    this.users = JSON.parse(localStorage.getItem('users'));\n    // console.log(this.users);\n  }\n\n  onSubmit(){\n    if(this.ticketForm.valid) this.openDialog();\n  }\n\n  toggled(){\n    this.cashChecked = !this.cashChecked;\n  }\n\n  onCancel(){\n    this.ticketForm.reset();\n    this.cashChecked = false;\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(TicketDialogComponent, {\n      width: '400px',\n      data: {\n        person: this.getPerson(),\n        workingWith: this.getWorkingWith(),\n        price: this.getPrice(),\n        tip: this.getTip(),\n        cash: this.getCash(),\n        transNum: this.getTransNum()\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.changeLoading(true);\n        let res = this.service.sendTicket(result);\n        if(res){\n          this.ticketForm.reset();\n          this.onCancel();\n          this.changeLoading(false);\n          this.loading = false;\n        }\n      }\n      else console.log(\"DONT SEND\");      \n    });\n  }\n\n  //changing the loading state\n  changeLoading(state: boolean){\n    this.loading = state;\n  }\n\n  //Getters for the validators\n  getPerson(){\n    return this.ticketForm.get(\"person\");\n  }\n  getPrice(){\n    return this.ticketForm.get(\"price\");\n  }\n  getTip(){\n    return this.ticketForm.get(\"tip\");\n  }\n  getWorkingWith(){\n    return this.ticketForm.get(\"workingWith\");\n  }\n  getCash(){\n    return this.ticketForm.get(\"cash\");\n  }\n  getTransNum(){\n    return this.ticketForm.get(\"transNum\");\n  }\n}\n","<div *ngIf=\"!loading\">\n      <form [formGroup]=\"ticketForm\">\n        <mat-card>\n          <mat-card-title>Ticket Entry</mat-card-title>\n          <div class=\"innerCard\">\n            <mat-card-content>\n              <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Name:</mat-label>\n                  <mat-select formControlName=\"person\" name=\"person\">\n                    <mat-option *ngFor=\"let user of users\" [value]=\"user.fname\">{{user.fname}}</mat-option>\n                  </mat-select>\n                  <div *ngIf=\"getPerson().invalid && getPerson().touched\">Name required</div> \n                </mat-form-field>\n              </div>\n              <!-- <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField\">\n                  <mat-label>Working With:</mat-label>\n                  <mat-select formControlName=\"workingWith\" name=\"workingWith\">\n                    <mat-option *ngFor=\"let user of filteredUsers\" [value]=\"user.fname\">{{user.fname}}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div> -->\n\n              <div>\n                <mat-slide-toggle formControlName=\"cash\" [checked]=\"cashChecked\" (toggleChange)=\"toggled()\">Cash</mat-slide-toggle>\n              </div>\n              <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Price</mat-label>\n                  <input matInput type=\"number\" formControlName=\"price\" name=\"price\">\n                  <div *ngIf=\"getPrice().invalid && getPrice().touched\">Price required</div> \n                </mat-form-field>\n              </div>\n              <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Tip (if cash, put 0)</mat-label>\n                  <input matInput type=\"number\" formControlName=\"tip\" name=\"tip\">\n                  <div *ngIf=\"getTip().invalid && getTip().touched\">Tip required</div> \n                </mat-form-field>\n              </div>\n              <div *ngIf=\"!cashChecked\">\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Transaction Number on Receipt</mat-label>\n                  <input matInput type=\"number\" formControlName=\"transNum\" name=\"transNum\">\n                </mat-form-field>\n              </div>\n            </mat-card-content>\n          </div>\n          <mat-card-actions align=\"center\">\n            <button type=\"reset\" mat-button color=\"warn\" (click)=\"onCancel()\">Cancel</button>\n            <button type=\"submit\" mat-button color=\"primary\" (click)=\"onSubmit()\">Submit</button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n</div>\n<mat-spinner *ngIf=\"loading\" class=\"loading\"></mat-spinner>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-technician-actions',\n  templateUrl: './technician-actions.component.html',\n  styleUrls: ['./technician-actions.component.css']\n})\nexport class TechnicianActionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n   //detect when not in focus\n   onBlur() {\n   }\n\n   tabChanged(event) {\n    // console.log(event);\n   }\n\n}\n","<mat-tab-group animationDuration=\"800ms\" mat-stretch-tabs (selectedIndexChange)=\"tabChanged($event)\"> \n    <mat-tab label=\"Ticket Entry\">\n        <app-ticket-entry></app-ticket-entry>\n    </mat-tab>\n    <mat-tab label=\"Check Total\" tabindex=\"1\" (blur)=\"onBlur()\">\n        <app-day-total></app-day-total> \n    </mat-tab>\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}