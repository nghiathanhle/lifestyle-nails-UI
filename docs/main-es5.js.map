{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/screens/person-pin-dialog/person-pin-dialog.component.ts","webpack:///src/app/screens/person-pin-dialog/person-pin-dialog.component.html","webpack:///src/app/screens/day-total/day-total.component.html","webpack:///src/app/screens/day-total/day-total.component.ts","webpack:///src/app/services/ticket-services.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/screens/ticket-dialog/ticket-dialog.component.ts","webpack:///src/app/screens/ticket-dialog/ticket-dialog.component.html","webpack:///src/app/screens/ticket-entry/ticket-entry.component.ts","webpack:///src/app/screens/ticket-entry/ticket-entry.component.html","webpack:///src/app/screens/technician-actions/technician-actions.component.ts","webpack:///src/app/screens/technician-actions/technician-actions.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","PersonPinDialogComponent","dialogRef","close","onCancelClick","selector","templateUrl","styleUrls","DayTotalComponent","service","dialog","displayedColumns","invalidPin","users","tickets","JSON","parse","localStorage","getItem","searchDate","formatDate","Date","correctPin","code","event","tempDate","getMonth","getDate","getFullYear","selected","getTickets","tempPerson","find","x","fname","value","openDialog","clearData","res","open","width","afterClosed","subscribe","result","selectedPerson","emId","temp","data","source","subscription","val","date","total","i","length","price","tip","unsubscribe","personChange","onDateChange","TicketServicesService","http","post","setItem","stringify","success","payload","createTicketPayload","toPromise","then","person","forEach","element","String","localeCompare","transaction","transNum","addition","providedIn","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","TicketDialogComponent","workingWith","cash","onNoClick","TicketEntryComponent","loading","ticketForm","required","cashChecked","getTechniciansAndStoreToLocalStorage","valid","reset","getPerson","getWorkingWith","getPrice","getTip","getCash","getTransNum","changeLoading","validToSubmit","validateToSend","sendTicket","onCancel","alert","console","log","currentTime","currentHour","getHours","state","get","TechnicianActionsComponent","tabChanged","onBlur","routes","AppRoutingModule","forRoot","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-person-pin-dialog',\n  templateUrl: './person-pin-dialog.component.html',\n  styleUrls: ['./person-pin-dialog.component.css']\n})\nexport class PersonPinDialogComponent implements OnInit {\n\n  pin: number;\n  constructor(\n    public dialogRef: MatDialogRef<PersonPinDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Please Enter Your Pin</h1>\n<div mat-dialog-content>\n    <!-- mat input for pin -->\n    <mat-form-field>\n        <input matInput type=\"password\" maxlength=\"4\" [(ngModel)]=\"pin\" name=\"pin\" required>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions align=\"center\">\n    <button mat-button (click)=\"onCancelClick()\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"pin\">Submit</button>\n</div>","<div class=\"horizontal\">\n    <div class=\"divide\">\n        <mat-card class=\"demo-inline-calendar-card\">\n            <mat-card-title>Day Total</mat-card-title>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Name:</mat-label>\n                  <mat-select [(value)]=\"selectedPerson\" (selectionChange)=\"personChange($event)\">\n                    <mat-option *ngFor=\"let user of users\" [value]=\"user.fname\">{{user.fname}}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n            </div>\n            <!-- <mat-calendar *ngIf=\"correctPin\" (selectedChange)=\"onDateChange($event)\"></mat-calendar> -->\n            <mat-calendar (selectedChange)=\"onDateChange($event)\"></mat-calendar>\n\n        </mat-card>\n    </div>\n    <div class=\"divide\">\n        <h2 class=\"personText\">\n            <span *ngIf=\"selectedPerson\">{{selectedPerson}}:     {{selected}}</span>\n            <span *ngIf=\"!selectedPerson\">Please select a person and Date</span>\n        </h2>\n\n        <table mat-table [dataSource]=\"tickets\" class=\"mat-elevation-z8\">\n            <!-- Item Column -->\n            <ng-container matColumnDef=\"price\">\n              <th mat-header-cell *matHeaderCellDef> Price </th>\n              <td mat-cell *matCellDef=\"let ticket\"> {{ticket.price}} </td>\n              <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n            </ng-container>\n          \n            <!-- Cost Column -->\n            <ng-container matColumnDef=\"tip\">\n              <th mat-header-cell *matHeaderCellDef> Tip </th>\n              <td mat-cell *matCellDef=\"let ticket\"> {{ticket.tip}} </td>\n              <td mat-footer-cell *matFooterCellDef> {{getTotalTip() | currency}} </td>\n            </ng-container>\n          \n            <!-- Cost Column -->\n            <ng-container matColumnDef=\"transaction\">\n                <th mat-header-cell *matHeaderCellDef> Transaction </th>\n                <td mat-cell *matCellDef=\"let ticket\"> {{ticket.transaction? ticket.transaction: 'Cash' }} </td>\n                <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n          </table>\n          \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n//import TicketService from '../../services/ticket.service';\nimport { TicketServicesService } from 'src/app/services/ticket-services.service';\nimport { interval, Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { PersonPinDialogComponent } from '../person-pin-dialog/person-pin-dialog.component';\n\n//creating a data model to be displayed\ninterface Transaction {\n  price: number;\n  tip: number;\n}\n\n@Component({\n  selector: 'app-day-total',\n  templateUrl: './day-total.component.html',\n  styleUrls: ['./day-total.component.css']\n})\nexport class DayTotalComponent implements OnInit {\n\n  subscription: Subscription;\n  source : any;\n  displayedColumns: string[] = ['price', 'tip', 'transaction'];\n  pin: number;\n  invalidPin: boolean = false;\n  selected: any;\n  selectedPerson:any;\n  users = [];\n  searchDate : string;\n  tickets = [];\n  correctPin: boolean;\n  code : string;\n  constructor(private service: TicketServicesService,\n    private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    //get users from local storage\n    this.users = JSON.parse(localStorage.getItem(\"users\"));\n    // get current date and store it into searchDate\n    // format searchDate using formatDate function\n    this.searchDate = this.formatDate(new Date());\n    this.correctPin = false;\n    this.code = \"\";\n  }\n\n  //call getTickets function from service, sending searchDate and selectedPerson.emId as parameters\n\n  //change selected date\n  onDateChange(event: Date) {\n    let tempDate = \"\";\n    //convert date to string in format mm-dd-yyyy\n    tempDate = event.getMonth() + 1 + \"-\" + event.getDate() + \"-\" + event.getFullYear();\n    this.selected = tempDate;\n    //format searchDate using formatDate function and store it into searchDate\n    this.searchDate = this.formatDate(event);\n    this.getTickets();\n  }\n\n  //change selected person\n  //popup window to ask for pin\n  //clearing tickets\n  //set searchDate to current date, format it using formatDate function\n  //call getTickets function\n  personChange(event: any) {\n    // console.log(this.openDialog());\n    //get password of selectedPerson from list of users\n    let tempPerson = this.users.find(x => x.fname == event.value);\n    this.openDialog(tempPerson.code, event);\n    \n  \n    // if(this.openDialog().localeCompare(tempPerson.code) == 0){\n      // console.log(\"correct pin\");\n      \n      // this.correctPin = true;\n      //changed selected to current date with format mm-dd-yyyy\n      // this.selected = (new Date()).getMonth() + 1 + \"-\" + (new Date()).getDate() + \"-\" + (new Date()).getFullYear();\n      // this.selectedPerson = event.value;\n      // this.tickets = [];\n      // this.searchDate = this.formatDate(new Date());\n      // this.getTickets();\n    // }else{\n    //   console.log(\"incorrect pin\");\n    // }\n  }\n\n  openDialog(code: any, event: any): void {\n    this.clearData();\n    var res = '';\n    const dialogRef = this.dialog.open(PersonPinDialogComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      res = result;\n      if(res == code){\n        this.selected = (new Date()).getMonth() + 1 + \"-\" + (new Date()).getDate() + \"-\" + (new Date()).getFullYear();\n        this.selectedPerson = event.value;\n        this.tickets = [];\n        this.searchDate = this.formatDate(new Date());\n        this.getTickets();\n      }\n    });\n  }\n\n  //call function from service.getTickets, sending searchDate and selectedPerson.emId as parameters\n  async getTickets() {\n    //get emId of selectedPerson from list of users\n    let tempPerson = this.users.find(x => x.fname == this.selectedPerson);\n    this.tickets = [];\n    let temp  = await this.service.getTickets(this.searchDate, tempPerson.emId);\n    this.tickets = temp.data;\n    this.source = interval(60000);//setting to clear data every 60 seconds\n    this.subscription = this.source.subscribe(val => this.clearData());//clear data every 60 seconds, calling this here to insure there is enough time\n  }\n  \n  //format date to yyyy_mm_dd\n  formatDate(date: Date) {\n    let tempDate = \"\";\n    tempDate = date.getFullYear() + \"_\" + (date.getMonth() + 1) + \"_\" + date.getDate();\n    return tempDate;\n  }\n\n  //get total price of tickets\n  getTotalCost() {\n    if (!this.tickets) {\n      return 0;\n    }\n    let total = 0;\n    for (let i = 0; i < this.tickets.length; i++) {\n      total += this.tickets[i].price;\n    }\n    return total;\n  }\n\n  //get total tip of tickets\n  getTotalTip() {\n    if (!this.tickets) {\n      return 0;\n    }\n    let total = 0;\n    for (let i = 0; i < this.tickets.length; i++) {\n      total += this.tickets[i].tip;\n    }\n    return total;\n  }\n\n  clearData(){\n    this.tickets = [];\n    this.selectedPerson = \"\";\n    this.selected = \"\";\n    if(this.subscription) this.subscription.unsubscribe();\n    this.source = null;\n    this.correctPin = false;\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketServicesService {\n  constructor( private http: HttpClient ) { }\n\n  //Getting technician details\n  getTechniciansAndStoreToLocalStorage(){\n    let users: any;\n    this.http.post<any>('https://us-central1-ntl-fb.cloudfunctions.net/getTechnicians',{}).subscribe(data => {  \n        // console.log(data.data);\n        localStorage.setItem('users', JSON.stringify(data.data));\n        users = data.data;\n    });\n  }\n\n  //Sending and persisting to the DB\n  async sendTicket(data):Promise<boolean>{\n    var success = false;\n    let payload = (this.createTicketPayload(data));\n    await this.http.post<any>('https://us-central1-ntl-fb.cloudfunctions.net/createTicket', payload, {}).subscribe(data => {  \n      if(data)  return true;\n    });\n    return false;\n  }\n\n  //get tickets for the technician using async await\n  async getTickets(date, emId):Promise<any>{\n    let tickets: any;\n    let payload = {\n      emId: emId,\n      date: date\n    }\n    await this.http.post<any>('https://us-central1-ntl-fb.cloudfunctions.net/getTickets', payload, {}).toPromise().then(data => {  \n      tickets = data;\n    });\n    return tickets;\n  }\n\n  createTicketPayload(data){\n    let users = JSON.parse(localStorage.getItem('users'));\n    let person = \"\"\n    users.forEach(element => {\n      if(String(element.fname).localeCompare(data.person)==0){\n        person = element.emId;\n      }\n    });\n    let payload = {\n      emId: person,\n      price: data.price,\n      tip: data.tip,\n      transaction: data.transNum,\n      addition: \"\"\n    }\n    return payload;\n  }\n\n  \n}\n","import { Component } from '@angular/core';\nimport { TicketEntryComponent } from '../app/screens/ticket-entry/ticket-entry.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lifestyle-frontend';\n}\n","<!-- <app-ticket-entry></app-ticket-entry> -->\n<!-- <app-day-total></app-day-total> -->\n<app-technician-actions></app-technician-actions>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\n\nimport { TicketEntryComponent } from './screens/ticket-entry/ticket-entry.component';\nimport { TicketDialogComponent } from './screens/ticket-dialog/ticket-dialog.component';\nimport { DayTotalComponent } from './screens/day-total/day-total.component';\nimport { TechnicianActionsComponent } from './screens/technician-actions/technician-actions.component';\nimport { PersonPinDialogComponent } from './screens/person-pin-dialog/person-pin-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TicketEntryComponent,\n    TicketDialogComponent,\n    DayTotalComponent,\n    TechnicianActionsComponent,\n    PersonPinDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatRadioModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatIconModule,\n    MatTabsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface TicketDialogData {\n  person: any;\n  workingWith: any;\n  price: any;\n  tip: any;\n  cash: any;\n  transNum: any;\n}\n\n@Component({\n  selector: 'app-ticket-dialog',\n  templateUrl: './ticket-dialog.component.html',\n  styleUrls: ['./ticket-dialog.component.css']\n})\n\nexport class TicketDialogComponent{\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TicketDialogData,\n    public dialogRef: MatDialogRef<TicketDialogComponent>\n  ) {\n    this.data.person = this.data.person.value;\n    if(this.data.workingWith) this.data.workingWith = this.data.workingWith.value;\n    if(this.data.price) this.data.price = this.data.price.value;\n    if(this.data.tip) this.data.tip = this.data.tip.value;\n    if(this.data.cash)  this.data.cash = this.data.cash.value;\n    if(this.data.transNum)  this.data.transNum = this.data.transNum.value;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Please double-check</h1>\n<div mat-dialog-content>\n    <h2>\n        <p>Technician: </p>\n        <p>{{data.person}}</p>\n    </h2>\n    <h2 *ngIf=\"data.workingWith\">\n        <p>Working with: </p>\n        <p>{{data.workingWith}}</p>    \n    </h2>\n    <h2>\n        <p>Price: </p>\n        <p>{{data.price}}</p>\n    </h2>\n    <h2>\n        <p>Tip: </p>\n        <p>{{data.tip}}</p>\n    </h2>\n    <h2 *ngIf=\"!data.cash\">\n        <p>Transaction Number: </p>\n        <p>{{data.transNum}}</p>\n    </h2>\n</div>\n<div mat-dialog-actions align=\"center\">\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"data\">Submit</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TicketServicesService } from 'src/app/services/ticket-services.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TicketDialogComponent } from '../ticket-dialog/ticket-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-ticket-entry',\n  templateUrl: './ticket-entry.component.html',\n  styleUrls: ['./ticket-entry.component.css']\n})\nexport class TicketEntryComponent implements OnInit {\n  loading = false;\n  users: [];\n  cashChecked: boolean;\n  ticketForm = new FormGroup({\n    person: new FormControl('', [Validators.required]),\n    workingWith: new FormControl(''),\n    price: new FormControl('', [Validators.required]),\n    tip: new FormControl('', [Validators.required]),\n    cash: new FormControl(''),\n    transNum: new FormControl('')\n  })\n\n  constructor(\n    private service: TicketServicesService,\n    public dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n    this.cashChecked = false;\n    // getting and storing users info into local storage\n    this.service.getTechniciansAndStoreToLocalStorage();\n    //retrieving from local storage\n    this.users = JSON.parse(localStorage.getItem('users'));\n    // console.log(this.users);\n  }\n\n  onSubmit(){\n    if(this.ticketForm.valid) this.openDialog();\n  }\n\n  toggled(){\n    this.cashChecked = !this.cashChecked;\n  }\n\n  onCancel(){\n    this.ticketForm.reset();\n    this.cashChecked = false;\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(TicketDialogComponent, {\n      width: '400px',\n      data: {\n        person: this.getPerson(),\n        workingWith: this.getWorkingWith(),\n        price: this.getPrice(),\n        tip: this.getTip(),\n        cash: this.getCash(),\n        transNum: this.getTransNum()\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.changeLoading(true);\n        let validToSubmit = this.validateToSend();\n        if(validToSubmit){\n          let res = this.service.sendTicket(result);\n          if(res){\n            this.ticketForm.reset();\n            this.onCancel();\n            this.changeLoading(false);\n            this.loading = false;\n          }\n        }else{\n          alert(\"You can only submit tickets between 10am and 8:30pm\");\n          this.ticketForm.reset();\n          this.onCancel();\n          this.changeLoading(false);\n          this.loading = false;\n        }\n      }\n      else console.log(\"DONT SEND\");      \n    });\n  }\n  validateToSend() {\n    //check if current time is between 10am and 8:30pm\n    let currentTime = new Date();\n    let currentHour = currentTime.getHours();\n    //check if current time is between 10am and 8:30pm\n    if(currentHour >= 10 && currentHour <= 21){\n      return true;\n    }\n    return false;\n  }\n\n  //changing the loading state\n  changeLoading(state: boolean){\n    this.loading = state;\n  }\n\n  //Getters for the validators\n  getPerson(){\n    return this.ticketForm.get(\"person\");\n  }\n  getPrice(){\n    return this.ticketForm.get(\"price\");\n  }\n  getTip(){\n    return this.ticketForm.get(\"tip\");\n  }\n  getWorkingWith(){\n    return this.ticketForm.get(\"workingWith\");\n  }\n  getCash(){\n    return this.ticketForm.get(\"cash\");\n  }\n  getTransNum(){\n    return this.ticketForm.get(\"transNum\");\n  }\n}\n","<div *ngIf=\"!loading\">\n      <form [formGroup]=\"ticketForm\">\n        <mat-card>\n          <mat-card-title>Ticket Entry</mat-card-title>\n          <div class=\"innerCard\">\n            <mat-card-content>\n              <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Name:</mat-label>\n                  <mat-select formControlName=\"person\" name=\"person\">\n                    <mat-option *ngFor=\"let user of users\" [value]=\"user.fname\">{{user.fname}}</mat-option>\n                  </mat-select>\n                  <div *ngIf=\"getPerson().invalid && getPerson().touched\">Name required</div> \n                </mat-form-field>\n              </div>\n              <!-- <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField\">\n                  <mat-label>Working With:</mat-label>\n                  <mat-select formControlName=\"workingWith\" name=\"workingWith\">\n                    <mat-option *ngFor=\"let user of filteredUsers\" [value]=\"user.fname\">{{user.fname}}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div> -->\n\n              <div>\n                <mat-slide-toggle formControlName=\"cash\" [checked]=\"cashChecked\" (toggleChange)=\"toggled()\">Cash</mat-slide-toggle>\n              </div>\n              <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Price</mat-label>\n                  <input matInput type=\"number\" formControlName=\"price\" name=\"price\">\n                  <div *ngIf=\"getPrice().invalid && getPrice().touched\">Price required</div> \n                </mat-form-field>\n              </div>\n              <div>\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Tip (if cash, put 0)</mat-label>\n                  <input matInput type=\"number\" formControlName=\"tip\" name=\"tip\">\n                  <div *ngIf=\"getTip().invalid && getTip().touched\">Tip required</div> \n                </mat-form-field>\n              </div>\n              <div *ngIf=\"!cashChecked\">\n                <mat-form-field appearance=\"fill\" class=\"inputField required\" aria-required=\"true\">\n                  <mat-label>Transaction Number on Receipt</mat-label>\n                  <input matInput type=\"number\" formControlName=\"transNum\" name=\"transNum\">\n                </mat-form-field>\n              </div>\n            </mat-card-content>\n          </div>\n          <mat-card-actions align=\"center\">\n            <button type=\"reset\" mat-button color=\"warn\" (click)=\"onCancel()\">Cancel</button>\n            <button type=\"submit\" mat-button color=\"primary\" (click)=\"onSubmit()\">Submit</button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n</div>\n<mat-spinner *ngIf=\"loading\" class=\"loading\"></mat-spinner>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-technician-actions',\n  templateUrl: './technician-actions.component.html',\n  styleUrls: ['./technician-actions.component.css']\n})\nexport class TechnicianActionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n   //detect when not in focus\n   onBlur() {\n   }\n\n   tabChanged(event) {\n    // console.log(event);\n   }\n\n}\n","<mat-tab-group animationDuration=\"800ms\" mat-stretch-tabs (selectedIndexChange)=\"tabChanged($event)\"> \n    <mat-tab label=\"Ticket Entry\">\n        <app-ticket-entry></app-ticket-entry>\n    </mat-tab>\n    <mat-tab label=\"Check Total\" tabindex=\"1\" (blur)=\"onBlur()\">\n        <app-day-total></app-day-total> \n    </mat-tab>\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}